// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model user_Instructor {
  id            Int                    @id @default(autoincrement())
  email         String                 @unique
  password      String
  username      String                 @unique
  refreshTokens refreshToken_Instructor[] 
  courseRooms  CourseRoom[]
}

model refreshToken_Instructor {
  id         Int      @id @default(autoincrement())
  userId     Int
  hashedToken String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  user       user_Instructor @relation(fields: [userId], references: [id])  
}


model user_Student {
  id            Int                    @id @default(autoincrement())
  email         String                 @unique
  password      String
  username      String                 @unique
  refreshTokens refreshToken_User []
}

model refreshToken_User {
  id         Int      @id @default(autoincrement())
  userId     Int
  hashedToken String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  user       user_Student @relation(fields: [userId], references: [id])  
}


model CourseRoom {
  id        Int       @id @default(autoincrement())
  name      String
  code      String    @unique 
  createdAt DateTime  @default(now())
  members   Int
  creatorId Int
  creator   user_Instructor      @relation(fields: [creatorId], references: [id])

 
}



model doubts{
  id Int @id @default(autoincrement())
  message  String
  username String
  createdAt DateTime @default(now())
  voteCount Int @default(0)
  roomId String
  userId Int

}


model StudentCourses {
  id        Int    @id @default(autoincrement())
  StudentId Int   
  roomName  String 
  members   Int
  creatorId Int
  joinedAt  DateTime  @default(now())
}